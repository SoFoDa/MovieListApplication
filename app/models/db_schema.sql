-- MySQL Script generated by MySQL Workbench
-- Thu Mar  7 13:45:47 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`User` ;

CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(60) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`User_friend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`User_friend` ;

CREATE TABLE IF NOT EXISTS `mydb`.`User_friend` (
  `user_id` INT NOT NULL,
  `friend_id` INT NOT NULL,
  INDEX `fk_User_friend_User_idx` (`user_id` ASC),
  INDEX `fk_User_friend_User1_idx` (`friend_id` ASC),
  CONSTRAINT `fk_User_friend_User`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_friend_User1`
    FOREIGN KEY (`friend_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`User_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`User_info` ;

CREATE TABLE IF NOT EXISTS `mydb`.`User_info` (
  `user_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `created` DATE NOT NULL,
  INDEX `fk_User_info_User1_idx` (`user_id` ASC),
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_User_info_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Movie` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Movie` (
  `movie_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(150) NOT NULL,
  `runtime` INT NOT NULL,
  `release_year` INT NOT NULL,
  `poster_path` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Seen`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Seen` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Seen` (
  `user_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  `favourite` INT NULL,
  `rating` INT(5) NULL,
  `date` DATE NOT NULL,
  INDEX `fk_Seen_User1_idx` (`user_id` ASC),
  INDEX `fk_Seen_Movie1_idx` (`movie_id` ASC),
  PRIMARY KEY (`user_id`, `movie_id`),
  CONSTRAINT `fk_Seen_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Seen_Movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`Movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Director`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Director` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Director` (
  `director_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`director_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Stats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Stats` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Stats` (
  `user_id` INT NOT NULL,
  `highest_rated_movie` INT NULL,
  `lowest_rated_movie` INT NULL,
  `favourite_director` INT NULL,
  `total_watchtime` INT NOT NULL,
  INDEX `fk_Stats_User1_idx` (`user_id` ASC),
  PRIMARY KEY (`user_id`),
  INDEX `fk_Stats_Movie1_idx` (`highest_rated_movie` ASC),
  INDEX `fk_Stats_Movie2_idx` (`lowest_rated_movie` ASC),
  INDEX `fk_Stats_Director1_idx` (`favourite_director` ASC),
  CONSTRAINT `fk_Stats_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Stats_Movie1`
    FOREIGN KEY (`highest_rated_movie`)
    REFERENCES `mydb`.`Movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Stats_Movie2`
    FOREIGN KEY (`lowest_rated_movie`)
    REFERENCES `mydb`.`Movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Stats_Director1`
    FOREIGN KEY (`favourite_director`)
    REFERENCES `mydb`.`Director` (`director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Activity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Activity` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Activity` (
  `activity_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `date` DATE NOT NULL,
  INDEX `fk_Activity_User1_idx` (`user_id` ASC),
  PRIMARY KEY (`activity_id`),
  CONSTRAINT `fk_Activity_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Activity_friend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Activity_friend` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Activity_friend` (
  `activity_id` INT NOT NULL,
  `friend_id` INT NOT NULL,
  INDEX `fk_Activity_friend_Activity1_idx` (`activity_id` ASC),
  INDEX `fk_Activity_friend_User1_idx` (`friend_id` ASC),
  PRIMARY KEY (`activity_id`),
  CONSTRAINT `fk_Activity_friend_Activity1`
    FOREIGN KEY (`activity_id`)
    REFERENCES `mydb`.`Activity` (`activity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Activity_friend_User1`
    FOREIGN KEY (`friend_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Activity_movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Activity_movie` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Activity_movie` (
  `activity_id` INT NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `movie_id` INT NOT NULL,
  INDEX `fk_Activity_movie_Activity1_idx` (`activity_id` ASC),
  PRIMARY KEY (`activity_id`),
  INDEX `fk_Activity_movie_Movie1_idx` (`movie_id` ASC),
  CONSTRAINT `fk_Activity_movie_Activity1`
    FOREIGN KEY (`activity_id`)
    REFERENCES `mydb`.`Activity` (`activity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Activity_movie_Movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`Movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Genre` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Genre` (
  `genre_id` INT NOT NULL AUTO_INCREMENT,
  `genre_type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`genre_id`),
  UNIQUE INDEX `genre_type_UNIQUE` (`genre_type` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Movie_director`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Movie_director` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Movie_director` (
  `movie_id` INT NOT NULL,
  `director_id` INT NOT NULL,
  INDEX `fk_Director_Movie1_idx` (`movie_id` ASC),
  CONSTRAINT `fk_Director_Movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`Movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_director_Director1`
    FOREIGN KEY (`director_id`)
    REFERENCES `mydb`.`Director` (`director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Movie_genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Movie_genre` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Movie_genre` (
  `movie_id` INT NOT NULL,
  `genre_id` INT NOT NULL,
  INDEX `fk_Movie_genre_Movie1_idx` (`movie_id` ASC),
  INDEX `fk_Movie_genre_Genre1_idx` (`genre_id` ASC),
  CONSTRAINT `fk_Movie_genre_Movie1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `mydb`.`Movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_genre_Genre1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `mydb`.`Genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
